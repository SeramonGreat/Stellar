document.addEventListener("DOMContentLoaded", function () {
    const starsContainer = document.getElementById("stars-container");
    const shootingStarsContainer = document.getElementById("shooting-stars-container");
    const typingText = document.getElementById('typing-text');
    const codeContainer = document.getElementById('code-container');
    const chatContent = document.getElementById('chat-content');
    const skipButton = document.getElementById('skip-button');

    let isSkipped = false; // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
    let buttonsCreated = false; // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–≤–µ–∑–¥ –∏ –º–µ—Ç–µ–æ—Ä–æ–≤
    for (let i = 0; i < 300; i++) {
        const star = document.createElement("div");
        star.className = "star";
        star.style.top = `${Math.random() * 100}%`;
        star.style.left = `${Math.random() * 100}%`;
        star.style.animationDuration = `${Math.random() * 2 + 1}s`;
        starsContainer.appendChild(star);
    }

    for (let i = 0; i < 30; i++) {
        const shootingStar = document.createElement("div");
        shootingStar.className = "shooting-star";
        shootingStar.style.top = `${Math.random() * 100}%`;
        shootingStar.style.left = `${Math.random() * 100}%`;
        shootingStar.style.animationDelay = `${Math.random() * 10}s`;
        shootingStarsContainer.appendChild(shootingStar);
    }

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—á–∞—Ç–∏ —Ç–µ–∫—Å—Ç–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
    const textToType = "Welcome To Stellar";
    let charIndex = 0;

    function typeNextCharacter() {
        if (charIndex < textToType.length) {
            typingText.textContent += textToType.charAt(charIndex);
            charIndex++;
            setTimeout(typeNextCharacter, 50);
        } else {
            typingText.classList.add('cursor');
            setTimeout(() => {
                typingText.classList.remove('cursor');
            }, 1000);
        }
    }

    typeNextCharacter();

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∞—Ç—Ä–∏—Ü—ã –Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä–µ
    const characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$%^&*()_+";
    const columns = Math.floor(codeContainer.offsetWidth / 10);

    function createMatrixColumn(index) {
        const column = document.createElement("div");
        column.className = "matrix-column";
        column.style.left = `${index * 20}px`;
        column.style.animationDuration = `${Math.random() * 2 + 1}s`;
        codeContainer.appendChild(column);

        const symbolCount = Math.floor(Math.random() * 20) + 10;
        for (let i = 0; i < symbolCount; i++) {
            const symbol = document.createElement("span");
            symbol.textContent = characters[Math.floor(Math.random() * characters.length)];
            symbol.style.animationDelay = `${Math.random() * 2}s`;
            column.appendChild(symbol);
        }

        column.addEventListener("animationend", () => {
            column.remove();
            createMatrixColumn(index);
        });
    }

    for (let i = 0; i < columns; i++) {
        createMatrixColumn(i);
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—á–∞—Ç–∏ —Ç–µ–∫—Å—Ç–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    function typeText(element, text, speed, onComplete) {
        let charIndex = 0;

        function typeNextCharacter() {
            if (charIndex < text.length && !isSkipped) {
                element.textContent += text.charAt(charIndex);
                charIndex++;
                setTimeout(typeNextCharacter, speed);
            } else {
                if (onComplete) onComplete();
            }
        }

        typeNextCharacter();
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∏—Ä–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    function eraseText(element, speed, onComplete) {
        let text = element.textContent;
        let length = text.length;

        function eraseNextCharacter() {
            if (length > 0 && !isSkipped) {
                element.textContent = text.substring(0, length - 1);
                length--;
                setTimeout(eraseNextCharacter, speed);
            } else {
                if (onComplete) onComplete();
            }
        }

        eraseNextCharacter();
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    function fadeOutText(element, speed, onComplete) {
        element.style.transition = `opacity ${speed}ms ease`;
        element.style.opacity = '0';
        setTimeout(() => {
            if (onComplete) onComplete();
        }, speed);
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–º–µ–Ω—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    function replaceSender(senderElement, newSender, speed, onComplete) {
        let charIndex = 0;

        function typeNextCharacter() {
            if (charIndex < newSender.length && !isSkipped) {
                senderElement.textContent = newSender.substring(0, charIndex + 1);
                charIndex++;
                setTimeout(typeNextCharacter, speed);
            } else {
                if (onComplete) onComplete();
            }
        }

        // –°–Ω–∞—á–∞–ª–∞ —Å—Ç–∏—Ä–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç
        eraseText(senderElement, speed, () => {
            // –ó–∞—Ç–µ–º –ø–µ—á–∞—Ç–∞–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç
            typeNextCharacter();
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫
    function createButtons() {
        if (buttonsCreated) return; // –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ —É–∂–µ —Å–æ–∑–¥–∞–Ω—ã, –≤—ã—Ö–æ–¥–∏–º
        buttonsCreated = true; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω—ã

        const buttonContainer = document.createElement('div');
        buttonContainer.className = 'button-container';

        const links = [
            { href: "/mobile/contacts", text: "–ö–æ–Ω—Ç–∞–∫—Ç—ã" },
            { href: "/mobile/project", text: "–ü—Ä–æ–µ–∫—Ç" },
            { href: "/mobile/support", text: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞" }
        ];

        links.forEach(link => {
            const btnWrapper = document.createElement('a');
            btnWrapper.href = link.href;
            btnWrapper.className = 'btn-wrapper';

            const btn = document.createElement('span');
            btn.className = 'btn btn-warning';
            btn.textContent = link.text;

            btnWrapper.appendChild(btn);
            buttonContainer.appendChild(btnWrapper);
        });

        chatContent.appendChild(buttonContainer);
    }

    // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —á–∞—Ç–∞
    async function startChatAnimation() {
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —á–∞—Ç–∞
        const messageElement = document.createElement('div');
        messageElement.className = 'message';
        chatContent.appendChild(messageElement);

        const senderElement = document.createElement('div');
        senderElement.className = 'sender';
        senderElement.textContent = "???";
        messageElement.appendChild(senderElement);

        const textElement = document.createElement('div');
        textElement.className = 'text';
        messageElement.appendChild(textElement);

        // –ü–µ—Ä–≤—ã–π —Ç–µ–∫—Å—Ç
        await new Promise((resolve) => {
            typeText(textElement, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!", 50, resolve);
        });

        // –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã
        await new Promise((resolve) => setTimeout(resolve, 3000));

        // –°—Ç–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π —Ç–µ–∫—Å—Ç
        await new Promise((resolve) => {
            eraseText(textElement, 20, resolve); // –£—Å–∫–æ—Ä–µ–Ω–Ω–æ–µ —Å—Ç–∏—Ä–∞–Ω–∏–µ
        });

        // –ú–µ–Ω—è–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –Ω–∞ "SeramonGreat" —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        await new Promise((resolve) => {
            replaceSender(senderElement, "SeramonGreat", 50, resolve);
        });

        // –í—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç
        await new Promise((resolve) => {
            typeText(textElement, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ú–µ–Ω—è –∑–æ–≤—É—Ç SeramonGreat, –∏ —è ‚Äî —Å–æ–∑–¥–∞—Ç–µ–ª—å —Å–∞–π—Ç–∞ Stellar. –° —Ä–∞–¥–æ—Å—Ç—å—é –æ—Ç–≤–µ—á—É –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ —Ç–æ–º, —á—Ç–æ —Ç–∞–∫–æ–µ Stellar.", 50, resolve);
        });

        // –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã
        await new Promise((resolve) => setTimeout(resolve, 3000));

        // –°—Ç–∏—Ä–∞–µ–º –≤—Ç–æ—Ä–æ–π —Ç–µ–∫—Å—Ç
        await new Promise((resolve) => {
            eraseText(textElement, 20, resolve); // –£—Å–∫–æ—Ä–µ–Ω–Ω–æ–µ —Å—Ç–∏—Ä–∞–Ω–∏–µ
        });

        // –¢—Ä–µ—Ç–∏–π —Ç–µ–∫—Å—Ç (–æ–ø–∏—Å–∞–Ω–∏–µ)
        const description = `
Stellar ‚Äî —ç—Ç–æ –Ω–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —É–¥–æ–±—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –û–Ω–∞ —Å–æ—á–µ—Ç–∞–µ—Ç –≤—ã—Å–æ–∫—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É —è–¥—Ä—É ‚ö°.
–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å üé® –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç–∏ üîÑ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.

–Ø–¥—Ä–æ Stellar Aurora System üõ†Ô∏è –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ.
–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å–æ–∑–¥–∞—ë—Ç—Å—è –æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ üá∑üá∫ —Å —É—á—ë—Ç–æ–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
–°—Ä–µ–¥–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ —è–∑—ã–∫–æ–≤ üåç.
–ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã üîß.
–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∏ –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –≤ —Ä–∞–±–æ—Ç–µ üîç, –∞ —Ç–∞–∫–∂–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π üöÄ. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –≤—Å–µ–≥–¥–∞ –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ üîí.

–ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –∫ —Ç–æ–º—É, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —á—É–≤—Å—Ç–≤–æ–≤–∞–ª —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–æ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –º–∏—Ä–µ —Å –Ω–∞–¥—ë–∂–Ω–æ–π –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π. –í–ø–µ—Ä—ë–¥ –∫ –Ω–æ–≤—ã–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–º —Å Stellar! ‚ú®
        `;

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å" –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –ø–µ—á–∞—Ç–∏ –æ–ø–∏—Å–∞–Ω–∏—è
        skipButton.style.display = 'block';

        await new Promise((resolve) => {
            typeText(textElement, description.trim(), 50, resolve);
        });

        // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å" –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
        skipButton.style.display = 'none';

        // –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ–º —Ç—Ä–µ—Ç—å–µ–≥–æ —Ç–µ–∫—Å—Ç–∞
        await new Promise((resolve) => setTimeout(resolve, 3000));

        // –ü–ª–∞–≤–Ω–æ–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ —Ç—Ä–µ—Ç—å–µ–≥–æ —Ç–µ–∫—Å—Ç–∞
        await new Promise((resolve) => {
            fadeOutText(textElement, 500, resolve);
        });

        // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        textElement.textContent = '';
        senderElement.textContent = '';

        // –ß–µ—Ç–≤–µ—Ä—Ç—ã–π —Ç–µ–∫—Å—Ç
        const fourthText = "–û–¥–Ω–∞–∫–æ —ç—Ç–æ—Ç —Å–∞–π—Ç —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ –∏–ª–∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å —Å –Ω–∞—à–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º. –í—ã–±–æ—Ä –∑–∞ —Ç–æ–±–æ–π! –£–¥–∞—á–∏, –ø–µ—Ä–≤–æ–æ—Ç–∫—Ä—ã–≤–∞—Ç–µ–ª—å!";
        await new Promise((resolve) => {
            typeText(textElement, fourthText, 50, resolve);
        });

        // –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ–º —á–µ—Ç–≤–µ—Ä—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
        await new Promise((resolve) => setTimeout(resolve, 3000));

        // –ü–ª–∞–≤–Ω–æ–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ —á–µ—Ç–≤–µ—Ä—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
        await new Promise((resolve) => {
            fadeOutText(textElement, 500, resolve);
        });

        // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—Å—Ç
        textElement.textContent = '';

        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        createButtons();
    }

    // –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏ —á–∞—Ç–∞
    startChatAnimation();

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
    skipButton.addEventListener('click', () => {
        isSkipped = true; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –ø—Ä–æ–ø—É—Å–∫–∞

        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é (–ø–ª–∞–≤–Ω–æ –∏—Å—á–µ–∑–∞–µ—Ç —Ç—Ä–µ—Ç–∏–π —Ç–µ–∫—Å—Ç –∏ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —á–µ—Ç–≤–µ—Ä—Ç—ã–π)
        const textElement = chatContent.querySelector('.text');

        // –ü–ª–∞–≤–Ω–æ–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ —Ç—Ä–µ—Ç—å–µ–≥–æ —Ç–µ–∫—Å—Ç–∞
        fadeOutText(textElement, 500, () => {
            textElement.textContent = ''; // –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç
            textElement.style.opacity = '1'; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å

            // –ß–µ—Ç–≤–µ—Ä—Ç—ã–π —Ç–µ–∫—Å—Ç
            const fourthText = "–û–¥–Ω–∞–∫–æ —ç—Ç–æ—Ç —Å–∞–π—Ç —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ –∏–ª–∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å —Å –Ω–∞—à–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º. –í—ã–±–æ—Ä –∑–∞ —Ç–æ–±–æ–π! –£–¥–∞—á–∏, –ø–µ—Ä–≤–æ–æ—Ç–∫—Ä—ã–≤–∞—Ç–µ–ª—å!";
            isSkipped = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø—Ä–æ–ø—É—Å–∫–∞, —á—Ç–æ–±—ã –∞–Ω–∏–º–∞—Ü–∏—è —á–µ—Ç–≤–µ—Ä—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ —Ä–∞–±–æ—Ç–∞–ª–∞
            typeText(textElement, fourthText, 50, () => {
                skipButton.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"

                // –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ–º —á–µ—Ç–≤–µ—Ä—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
                setTimeout(() => {
                    // –ü–ª–∞–≤–Ω–æ–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ —á–µ—Ç–≤–µ—Ä—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
                    fadeOutText(textElement, 500, () => {
                        textElement.textContent = ''; // –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç
                        textElement.style.opacity = '1'; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å

                        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
                        createButtons();
                    });
                }, 3000);
            });
        });
    });
});